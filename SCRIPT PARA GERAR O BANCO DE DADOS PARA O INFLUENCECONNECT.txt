-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.administradores
(
    id_usuario integer NOT NULL,
    cpf_administrador character varying(14) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT administradores_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT administradores_cpf_administrador_key UNIQUE (cpf_administrador)
);

CREATE TABLE IF NOT EXISTS public.campanhas
(
    id_campanha serial NOT NULL,
    nome_campanha character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_inicio_campanha date NOT NULL,
    data_fim_campanha date NOT NULL,
    descricao_campanha text COLLATE pg_catalog."default",
    canais_marketing_campanha text[] COLLATE pg_catalog."default" NOT NULL,
    status_campanha status_campanha_enum NOT NULL,
    orcamento_campanha numeric(15, 2) NOT NULL,
    expectativas_curtidas_campanha integer,
    expectativas_comentarios_campanha integer,
    expectativas_salvamentos_campanha integer,
    CONSTRAINT campanhas_pkey PRIMARY KEY (id_campanha)
);

CREATE TABLE IF NOT EXISTS public.campanhas_empresas
(
    id_campanha integer NOT NULL,
    id_empresa integer NOT NULL,
    CONSTRAINT campanhas_empresas_pkey PRIMARY KEY (id_campanha, id_empresa)
);

CREATE TABLE IF NOT EXISTS public.campanhas_influenciadores
(
    id_campanha integer NOT NULL,
    id_influenciador integer NOT NULL,
    CONSTRAINT campanhas_influenciadores_pkey PRIMARY KEY (id_campanha, id_influenciador)
);

CREATE TABLE IF NOT EXISTS public.empresas
(
    id_usuario integer NOT NULL,
    nome_empresa character varying(255) COLLATE pg_catalog."default" NOT NULL,
    logo_empresa text COLLATE pg_catalog."default",
    cnpj_empresa character varying(18) COLLATE pg_catalog."default" NOT NULL,
    login_empresa character varying(50) COLLATE pg_catalog."default" NOT NULL,
    senha_empresa character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status_empresa status_empresa_enum NOT NULL,
    CONSTRAINT empresas_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT empresas_cnpj_empresa_key UNIQUE (cnpj_empresa),
    CONSTRAINT empresas_login_empresa_key UNIQUE (login_empresa)
);

CREATE TABLE IF NOT EXISTS public.influenciadores
(
    id_usuario integer NOT NULL,
    foto_influenciador text COLLATE pg_catalog."default",
    cpf_influenciador character varying(14) COLLATE pg_catalog."default" NOT NULL,
    estado_influenciador character varying(2) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento_influenciador date NOT NULL,
    redes_sociais_influenciador text[] COLLATE pg_catalog."default" NOT NULL,
    status_influenciador status_influenciador_enum NOT NULL,
    CONSTRAINT influenciadores_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT influenciadores_cpf_influenciador_key UNIQUE (cpf_influenciador)
);

CREATE TABLE IF NOT EXISTS public.nichos
(
    id_nicho serial NOT NULL,
    nome_nicho character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT nichos_pkey PRIMARY KEY (id_nicho)
);

CREATE TABLE IF NOT EXISTS public.nichos_campanhas
(
    id_nicho integer NOT NULL,
    id_campanha integer NOT NULL,
    CONSTRAINT nichos_campanhas_pkey PRIMARY KEY (id_nicho, id_campanha)
);

CREATE TABLE IF NOT EXISTS public.nichos_empresas
(
    id_nicho integer NOT NULL,
    id_empresa integer NOT NULL,
    CONSTRAINT nichos_empresas_pkey PRIMARY KEY (id_nicho, id_empresa)
);

CREATE TABLE IF NOT EXISTS public.nichos_influenciadores
(
    id_nicho integer NOT NULL,
    id_influenciador integer NOT NULL,
    CONSTRAINT nichos_influenciadores_pkey PRIMARY KEY (id_nicho, id_influenciador)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id_role serial NOT NULL,
    type_role type_role_enum NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id_role)
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id_usuario serial NOT NULL,
    nome_usuario character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email_usuario character varying(255) COLLATE pg_catalog."default" NOT NULL,
    senha_usuario character varying(255) COLLATE pg_catalog."default" NOT NULL,
    login_usuario character varying(50) COLLATE pg_catalog."default" NOT NULL,
    id_role integer NOT NULL,
    CONSTRAINT usuarios_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT usuarios_email_usuario_key UNIQUE (email_usuario),
    CONSTRAINT usuarios_login_usuario_key UNIQUE (login_usuario)
);

ALTER TABLE IF EXISTS public.administradores
    ADD CONSTRAINT administradores_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS administradores_pkey
    ON public.administradores(id_usuario);


ALTER TABLE IF EXISTS public.campanhas_empresas
    ADD CONSTRAINT campanhas_empresas_id_campanha_fkey FOREIGN KEY (id_campanha)
    REFERENCES public.campanhas (id_campanha) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.campanhas_empresas
    ADD CONSTRAINT campanhas_empresas_id_empresa_fkey FOREIGN KEY (id_empresa)
    REFERENCES public.empresas (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.campanhas_influenciadores
    ADD CONSTRAINT campanhas_influenciadores_id_campanha_fkey FOREIGN KEY (id_campanha)
    REFERENCES public.campanhas (id_campanha) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.campanhas_influenciadores
    ADD CONSTRAINT campanhas_influenciadores_id_influenciador_fkey FOREIGN KEY (id_influenciador)
    REFERENCES public.influenciadores (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.empresas
    ADD CONSTRAINT empresas_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS empresas_pkey
    ON public.empresas(id_usuario);


ALTER TABLE IF EXISTS public.influenciadores
    ADD CONSTRAINT influenciadores_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS influenciadores_pkey
    ON public.influenciadores(id_usuario);


ALTER TABLE IF EXISTS public.nichos_campanhas
    ADD CONSTRAINT nichos_campanhas_id_campanha_fkey FOREIGN KEY (id_campanha)
    REFERENCES public.campanhas (id_campanha) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.nichos_campanhas
    ADD CONSTRAINT nichos_campanhas_id_nicho_fkey FOREIGN KEY (id_nicho)
    REFERENCES public.nichos (id_nicho) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.nichos_empresas
    ADD CONSTRAINT nichos_empresas_id_empresa_fkey FOREIGN KEY (id_empresa)
    REFERENCES public.empresas (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.nichos_empresas
    ADD CONSTRAINT nichos_empresas_id_nicho_fkey FOREIGN KEY (id_nicho)
    REFERENCES public.nichos (id_nicho) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.nichos_influenciadores
    ADD CONSTRAINT nichos_influenciadores_id_influenciador_fkey FOREIGN KEY (id_influenciador)
    REFERENCES public.influenciadores (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.nichos_influenciadores
    ADD CONSTRAINT nichos_influenciadores_id_nicho_fkey FOREIGN KEY (id_nicho)
    REFERENCES public.nichos (id_nicho) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_role_fkey FOREIGN KEY (id_role)
    REFERENCES public.roles (id_role) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;